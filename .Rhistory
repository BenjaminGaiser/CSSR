getwd
getwd()
getwd()
data()
numeric_vector <- c(1,2,3,4,5)
character_vector <- c(a,b,c,d,e)
character_vector <- c(a,b,c,d,e)
character_vector <- c(a,b,c,d,e)
character_vector <- c(a, b, c, d, e)
character_vector <- c(a,b,c,d,e)
character_vector <- c(a,b,c,d,e)
character_vector <- c('a','b','c','d','e')
logical_vector <- c(TRUE, TRUE, TRUE, TRUE, TRUE)
factor_vector <- as.factor(c('a','b','c','d','e'))
str(character_vector)
str(factor_vector)
df <- data.frame (numeric_vector, character_vector, logical_vector, factor_vector)
str(df)
data()
data('swiss')
?swiss
df <- data.frame (numeric_vector, character_vector, logical_vector, factor_vector, stringsAsFactors = FALSE)
getwd
getwd()
library(rio)
getwd()
data()
numeric_vector <- c(1,2,3,4,5)
character_vector <- c('a','b','c','d','e')
logical_vector <- c(TRUE, TRUE, TRUE, TRUE, TRUE)
factor_vector <- as.factor(c('a','b','c','d','e'))
str(character_vector)
str(factor_vector)
df <- data.frame (numeric_vector, character_vector, logical_vector, factor_vector,
stringsAsFactors = FALSE)
str(df)
data('swiss')
?swiss
?str
str(factor_vector)
?factor_vector
??factor_vector
?swiss
list.files
list.files
getwd
getwd()
list()
View(df)
View(swiss)
getwd()
list.files()
names(swiss)
names(df)
df$numeric_vector
swiss$Catholic
swiss$Catholic
swiss$Catholic
ls()
list.files(df)
list.files()
?ls()
summary(swiss)
?subset
install.packages("rmarkdown")
install.packages("rmarkdown")
getwd()
library(rmarkdown)
render("1-example.Rmd")
library(rmarkdown)
summary()
str(df)
summary(swiss)
knitr::kable(mtcars)
knitr::kable(swiss)
summary(swiss)
data('swiss')
data('swiss')
data("swiss")
data()
data("swiss")
names(swiss)
df$numeric_vector
ls()
summary(swiss)
knitr::kable(swiss)
knitr::opts_chunk$set(echo = TRUE)
summary(swiss)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: swiss
summary(swiss)
# Chunk 3: swiss
plot(swiss)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: swiss
summary(swiss)
# Chunk 3: swiss
plot(swiss, fertility, education)
plot(swiss, fertility)
?plot
plot(fertility, education)
plot(cars)
plot(cars)
View(swiss)
plot(swiss)
plot(fertility)
fertility <- c(swiss$Fertility)
education <- c(swiss$Education)
plot(education, fertility)
knitr::opts_chunk$set(echo = TRUE)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: swiss
summary(swiss$education, swiss$fertility)
# Chunk 3: swiss
plot(swiss$education, swiss$fertility)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: swiss
summary(swiss$Education, swiss$Fertility)
# Chunk 3: swiss
plot(swiss$Education, swiss$Fertility)
summary(swiss$Fertility)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: swiss
summary(swiss$Fertility)
# Chunk 3: swiss
plot(swiss$Education, swiss$Fertility)
View(swiss)
View(swiss$Fertility)
head(swiss, n=5)
view(swiss)
view(swiss)
getOption()
getOption("max.print")
options(max.print = 100)
getOption("max.print")
?repmis
??repmis
?getOptions
?getOption
options()
####
#
# New R file for First Pair Assignment
# Ben Gaiser and Jeremy Russell
# 30 September 2016
# Purpose:
# fivethirtyeight data set
# cite R and R packages used
# Style Guide:
#
####
#####
# 1. Pair Assignment
#####
# README.md file
# Human Readable
# Include 2 R Core Data Sets
# Relevant descriptive statistics
# Dynamically Linked
# Pull Request with another pair
# Set global options for viewability
options(max.print = 100)
getOption("max.print")
# Load packages and remove from global environment
packages <- c('repmis', 'knitr', 'rmarkdown', 'ggplot2')
for (p in packages) {
if (p %in% installed.packages()[,1:4]) require(p, character.only=T)
else {
install.packages(p)
require(p, character.only=T)
}
}
repmis::LoadandCite(packages, file = 'RpackageCitations.bib')
rm(packages, p)
# Set working directories and remove from global environment
wrkdir <- c('C:/Users/Benji/Desktop/Statistics/Git/Repositories/data/alcohol-consumption',
'~/Hertie School/Fall 2016/CollaborativeSocialScienceDataAnalysis/CSSR')
repmis::set_valid_wd(wrkdir)
rm(wrkdir)
# Import data frames
AlcoholConsumption <- read.csv("drinks.csv", header = TRUE, sep = ",",
stringsAsFactors = FALSE, na.strings = c("", "NA"))
# For intuition
#c <- ggplot(AlcoholConsumption, aes(beer_servings,
#                                    total_litres_of_pure_alcohol))
# Create heavy wine/spirit drinker categories and use as factor
#d <- c + geom_point()
# for size
#c + geom_point(aes(size = qsec))
#p + geom_point(aes(colour = factor(cyl)), size = 4) +
#  geom_point(colour = "grey90", size = 1.5)
#c + geom_point() + geom_smooth()
#c + geom_point() + geom_smooth(method = "lm", se = FALSE)
#c + geom_point() + geom_smooth(method = "lm", se = TRUE)
summary(AlcoholConsumption$beer_servings)
summary(AlcoholConsumption$total_litres_of_pure_alcohol)
# Create heavy wine/spirit drinker categories and use as factor
summary(AlcoholConsumption$wine_servings)
AlcoholConsumption$WineCat1 <- cut(AlcoholConsumption$wine_servings, seq(0, 370, 50))
summary(AlcoholConsumption$WineCat1)
ggplotRegression <- function(fit){
ggplot(AlcoholConsumption, aes(beer_servings, total_litres_of_pure_alcohol)) +
geom_point(aes(colour = factor(AlcoholConsumption$WineCat1))) +
scale_colour_discrete(name="Wine Servings") +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 3),
"Intercept =",signif(fit$coef[[1]],3 ),
" Slope =",signif(fit$coef[[2]], 1),
" P =",signif(summary(fit)$coef[2,4], 2)))
}
FitOfData <- lm(total_litres_of_pure_alcohol ~ beer_servings, data=AlcoholConsumption)
ggplotRegression(FitOfData)
# Who drinks the most and the least amount of total litres of pure alcohol
which.max(AlcoholConsumption$total_litres_of_pure_alcohol) # row 16
head(AlcoholConsumption[16,]) # Belarus
which.min(AlcoholConsumption$total_litres_of_pure_alcohol) # row 1
head(AlcoholConsumption[1,]) # Afghanistan
# Find Germany, USA, South Africa, China and Australia
which(grepl("Germany", AlcoholConsumption$country)) # row 66
which(grepl("USA", AlcoholConsumption$country)) # row 185
which(grepl("South Africa", AlcoholConsumption$country)) # row 160
which(grepl("China", AlcoholConsumption$country)) # row 37
which(grepl("Australia", AlcoholConsumption$country)) # row 9
# SubsetOfFiveCountries for graphs
SubsetOfFiveCountries <- AlcoholConsumption[c(9, 37, 66, 160, 185),]
IndividualCountries <- ggplot(SubsetOfFiveCountries,
aes(beer_servings, total_litres_of_pure_alcohol))
IndividualCountries + geom_point(aes(colour = factor(country))) +
scale_colour_discrete(name="Countries")
View(AlcoholConsumption)
(AlcoholConsumption$beer_servings)
ggplotRegression <- function(fit){
ggplot(AlcoholConsumption, aes(beer_servings, total_litres_of_pure_alcohol)) +
geom_point(aes(colour = factor(AlcoholConsumption$WineCat1))) +
scale_colour_discrete(name="Wine Servings") +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 3),
"Intercept =",signif(fit$coef[[1]],3 ),
" Slope =",signif(fit$coef[[2]], 1),
" P =",signif(summary(fit)$coef[2,4], 2)))
}
FitOfData <- lm(total_litres_of_pure_alcohol ~ beer_servings, data=AlcoholConsumption)
ggplotRegression(FitOfData)
which.max(AlcoholConsumption$total_litres_of_pure_alcohol) # row 16
head(AlcoholConsumption[16,]) # Belarus
which(grepl("Germany", AlcoholConsumption$country)) # row 66
View(AlcoholConsumption)
View(SubsetOfFiveCountries)
####
#
# New R file for First Pair Assignment
# Ben Gaiser and Jeremy Russell
# 30 September 2016
# Purpose:
# R Data
# cite R and R packages used
# Style Guide:
#
####
#####
# 1. Pair Assignment
#####
# README.md file
# Human Readable
# Include 2 R Core Data Sets
# Relevant descriptive statistics
# Dynamically Linked
# Pull Request with another pair
# Set global options for viewability
options(max.print = 100)
getOption("max.print")
# Load packages and remove from global environment
packages <- c('base', 'repmis', 'knitr', 'rmarkdown', 'WDI')
for (p in packages) {
if (p %in% installed.packages()[,1:4]) require(p, character.only=T)
else {
install.packages(p)
require(p, character.only=T)
}
}
repmis::LoadandCite(packages, file = 'RpackageCitations.bib')
rm(packages, p)
# Set working directories and remove from global environment
wrkdir <- c('C:/Users/Benji/Desktop/Statistics/Git/Repositories/data/alcohol-consumption',
'~/Hertie School/Fall 2016/CollaborativeSocialScienceDataAnalysis/CSSR')
repmis::set_valid_wd(wrkdir)
rm(wrkdir)
# Import data frames
swiss <- as.data.frame(swiss) # rename Variable names
####
#
# New R file for First Pair Assignment
# Ben Gaiser and Jeremy Russell
# 30 September 2016
# Purpose:
# R Data
# cite R and R packages used
# Style Guide:
#
####
#####
# 1. Pair Assignment
#####
# README.md file
# Human Readable
# Include 2 R Core Data Sets
# Relevant descriptive statistics
# Dynamically Linked
# Pull Request with another pair
# Set global options for viewability
options(max.print = 100)
getOption("max.print")
# Load packages and remove from global environment
packages <- c('base', 'repmis', 'knitr', 'rmarkdown', 'WDI')
for (p in packages) {
if (p %in% installed.packages()[,1:4]) require(p, character.only=T)
else {
install.packages(p)
require(p, character.only=T)
}
}
repmis::LoadandCite(packages, file = 'RpackageCitations.bib')
rm(packages, p)
# Set working directories and remove from global environment
wrkdir <- c('C:/Users/Benji/Desktop/Statistics/Git/Repositories/data/alcohol-consumption',
'~/Hertie School/Fall 2016/CollaborativeSocialScienceDataAnalysis/CSSR')
repmis::set_valid_wd(wrkdir)
rm(wrkdir)
# Import data frames
swiss <- as.data.frame(swiss) # rename Variable names
View(swiss)
?swiss
####
#
# New R file for First Pair Assignment
# Ben Gaiser and Jeremy Russell
# 30 September 2016
# Purpose:
# R Data
# cite R and R packages used
# Style Guide:
#
####
#####
# 1. Pair Assignment - Data Frame 2: Swiss Data Set
# Source: Swiss Fertility and Socioeconomic Indicators (1888), R Data Set
#####
# README.md file
# Human Readable
# Include 2 R Core Data Sets
# Relevant descriptive statistics
# Dynamically Linked
# Pull Request with another pair
# Set global options for viewability
options(max.print = 100)
getOption("max.print")
# Load packages and remove from global environment
packages <- c('repmis', 'knitr', 'rmarkdown', 'ggplot2', 'pastecs')
for (p in packages) {
if (p %in% installed.packages()) require(p, character.only=TRUE) # what does that [] mean
else {
install.packages(p)
require(p, character.only=TRUE)
}
}
repmis::LoadandCite(packages, file = 'RpackageCitations.bib')
rm(packages, p)
install.packages(c("curl", "foreign", "geepack", "lattice", "Matrix", "mgcv", "R6", "Rcpp", "stringi", "survey", "survival"))
install.packages(c("curl", "foreign", "geepack", "lattice", "Matrix",
####
#
# New R file for First Pair Assignment
# Ben Gaiser and Jeremy Russell
# 30 September 2016
# Purpose:
# R Data
# cite R and R packages used
# Style Guide:
#
####
#####
# 1. Pair Assignment - Data Frame 2: Swiss Data Set
# Source: Swiss Fertility and Socioeconomic Indicators (1888), R Data Set
#####
# README.md file
# Human Readable
# Include 2 R Core Data Sets
# Relevant descriptive statistics
# Dynamically Linked
# Pull Request with another pair
# Set global options for viewability
options(max.print = 100)
getOption("max.print")
# Load packages and remove from global environment
packages <- c('repmis', 'knitr', 'rmarkdown', 'ggplot2', 'pastecs')
for (p in packages) {
if (p %in% installed.packages()) require(p, character.only=TRUE) # what does that [] mean
else {
install.packages(p)
require(p, character.only=TRUE)
}
}
repmis::LoadandCite(packages, file = 'RpackageCitations.bib')
rm(packages, p)
# Set working directories and remove from global environment
wrkdir <- c('C:/Users/Benji/Desktop/Statistics/Git/Repositories/data/alcohol-consumption',
'~/Hertie School/Fall 2016/CollaborativeSocialScienceDataAnalysis/CSSR')
repmis::set_valid_wd(wrkdir)
rm(wrkdir)
# Import data frames
swiss <- as.data.frame(swiss) # rename Variable names
View(swiss)
View(swiss)
View(swiss)
summary(swiss)
summary(swiss$Fertility)
View(swiss)
plot(swiss$Fertility, swiss$Agriculture)
plot(swiss$Fertility, swiss$Examination)
?swiss
plot(swiss$Fertility, swiss$Education)
summary(swiss$Fertility)
summary(swiss$Education)
?swiss
plot(swiss$Fertility, swiss$Education)
ggplotSwiss <- function(fit){
ggplot(swiss, aes(swiss$Fertility, swiss$Education)) +
geom_point(aes) +
scale_colour_discrete(name="whatever goes here") +
stat_smooth(method = "lm", col = "black") +
labs(title = paste("Adj. R2 = ",signif(summary(fit)$adj.r.squared, 3),
"Intercept =", signif(fit@coef[[1]],3 ),
"Slope =", signif(fit$coef[[2]], 1),
"P =", signif(summary(fit)$coef[2,4], 2))
}
ggplotSwiss <- function(fit){
ggplot(swiss, aes(Fertility, Education)) +
geom_point(aes) +
scale_colour_discrete(name="whatever goes here") +
stat_smooth(method = "lm", col = "black") +
labs(title = paste("Adj. R2 = ",signif(summary(fit)$adj.r.squared, 3),
"Intercept =", signif(fit@coef[[1]],3 ),
"Slope =", signif(fit$coef[[2]], 1),
"P =", signif(summary(fit)$coef[2,4], 2))
}
ggplotSwiss <- function(fit){
ggplot(swiss, aes(swiss$Fertility, swiss$Education)) +
geom_point(aes(colour = swiss)) +
scale_colour_discrete(name="whatever goes here") +
stat_smooth(method = "lm", col = "black") +
labs(title = paste("Adj. R2 = ",signif(summary(fit)$adj.r.squared, 3),
"Intercept =", signif(fit@coef[[1]],3 ),
"Slope =", signif(fit$coef[[2]], 1),
"P =", signif(summary(fit)$coef[2,4], 2))
}
ggplotRegression <- function(fit){
ggplot(AlcoholConsumption, aes(beer_servings, total_litres_of_pure_alcohol)) +
geom_point(aes(colour = factor(AlcoholConsumption$WineCat1))) +
scale_colour_discrete(name="Wine Servings") +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 3),
"Intercept =",signif(fit$coef[[1]],3 ),
" Slope =",signif(fit$coef[[2]], 1),
" P =",signif(summary(fit)$coef[2,4], 2)))
}
FitOfData <- lm(total_litres_of_pure_alcohol ~ beer_servings, data=AlcoholConsumption)
ggplotRegression(FitOfData)
ggplotRegSwiss <- function(fit){
ggplot(swiss, aes(Fertility, Education)) +
geom_point(aes(colour = "black")) +
scale_colour_discrete(name="whatever goes here") +
stat_smooth(method = "lm", col = "black") +
}
ggplotRegSwiss <- function(fit)
ggplot(swiss, aes(Fertility, Education)) +
geom_point(aes(colour = "black")) +
scale_colour_discrete(name="whatever goes here") +
stat_smooth(method = "lm", col = "black") +
View(ggplotRegression)
View(ggplotRegSwiss)
ggplotRegSwiss <- function(fit){
ggplot(swiss, aes(Fertility, Education)) +
geom_point(aes(colour = "black")) +
scale_colour_discrete(name="whatever goes here") +
stat_smooth(method = "lm", col = "black") +
labs(title = paste("Adj. R2 = ",signif(summary(fit)$adj.r.squared, 3),
"Intercept =" ,signif(fit@coef[[1]],3 ),
"Slope =" ,signif(fit$coef[[2]], 1),
"P =" ,signif(summary(fit)$coef[2,4], 2))
}
qplot(swiss$Fertility, swiss$Education)
qplot(swiss$Fertility, swiss$Education, colour = "orange")
qplot(swiss$Fertility, swiss$Education, colour = "lilac")
qplot(swiss$Fertility, swiss$Education, colour = "chartreuse")
qplot(swiss$Fertility, swiss$Education, colour = "orange")
qplot(swiss$Fertility, swiss$Education, colour = "orange", geom = "smooth",
method = "lm", formula = Education ~ Fertility, xlab = "Fertility",
ylab = "Education")
qplot(swiss$Fertility, swiss$Education, colour = "orange", geom = "smooth",
method = "lm", formula = swiss$Education ~ swiss$Fertility, xlab = "Fertility",
ylab = "Education")
qplot(swiss$Fertility, swiss$Education, colour = "orange", geom = "smooth",
method = "lm", xlab = "Fertility", ylab = "Education")
qplot(swiss$Fertility, swiss$Education, colour = "orange", xlab = "Fertility", ylab = "Education")
qplot(swiss$Fertility, swiss$Education, colour = "orange", geom = "point" xlab = "Fertility",
qplot(swiss$Fertility, swiss$Education, colour = "orange", geom = "smooth" xlab = "Fertility",
qplot(swiss$Fertility, swiss$Education, colour = "orange", xlab = "Fertility",
